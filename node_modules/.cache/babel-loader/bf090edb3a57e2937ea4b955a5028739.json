{"ast":null,"code":"var _jsxFileName = \"/Users/justintan/Documents/GitHub/assignment-3-tan-justin/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route, Link, useParams, Outlet, NavLink, useSearchParams } from 'react-router-dom';\nimport { css, jsx } from '@emotion/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"L\\xE9 Weather Watcher~\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/16Day\",\n        element: /*#__PURE__*/_jsxDEV(SixteenDays, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Credits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to L\\xE9 Weather Watcher. Please select from the above menu options!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Home;\n\nfunction Menu() {\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/16Day\",\n      children: \"16 Days Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/Credits\",\n      children: \"Credits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n\n_c3 = Menu;\n\nfunction SixteenDays() {\n  _s();\n\n  const [weather, setWeather] = useState([]);\n  const [Latitude, setLatitude] = useState('');\n  const [Longtitude, setLongtitude] = useState('');\n  const [cnt, setCount] = useState('');\n  const [cityName, setCity] = useState('');\n  const [stateCode, setStateCode] = useState('');\n  const [countryCode, setCountryCode] = useState('');\n  var number = 1.7;\n\n  const getDataRequest = async (Latitude, Longtitude, cnt) => {\n    const url = `https://api.openweathermap.org/data/2.5/forecast/daily?lat=${Latitude}&lon=${Longtitude}&cnt=${cnt}&units=metric&appid=da655239f538023532cc87591851330d`;\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n\n    if (responseJSON.list) {\n      setWeather(responseJSON.list);\n    }\n  };\n\n  useEffect(() => {\n    getDataRequest(Latitude, Longtitude);\n  }, [Latitude, Longtitude]);\n\n  const getGeoCodeRequest = async (cityName, stateCode, countryCode) => {\n    const geocode = `http://api.openweathermap.org/geo/1.0/direct?q=${cityName},${stateCode},${countryCode}&limit=5&appid=da655239f538023532cc87591851330d`;\n    const responseGeo = await fetch(geocode);\n    const responseJsonGeo = await responseGeo.json();\n    console.log(responseJsonGeo);\n    var lon = responseJsonGeo.lon;\n    var lat = responseJsonGeo.lat;\n    console.log(responseJsonGeo.lon);\n\n    if (responseJsonGeo.lat) {\n      setLatitude(lon);\n    }\n\n    if (responseJsonGeo.lon) {\n      setLongtitude(lat);\n    }\n  };\n\n  useEffect(() => {\n    getGeoCodeRequest(cityName, stateCode, countryCode);\n  }, [cityName, stateCode, countryCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      cityName: cityName,\n      setCity: setCity,\n      stateCode: stateCode,\n      setStateCode: setStateCode,\n      countryCode: countryCode,\n      setCountryCode: setCountryCode,\n      cnt: cnt,\n      setCount: setCount,\n      getGeoCodeRequest: getGeoCodeRequest,\n      getDataRequest: getDataRequest,\n      Latitude: Latitude,\n      setLatitude: setLatitude,\n      Longtitude: Longtitude,\n      setLongtitude: setLongtitude\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      data: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 4\n  }, this);\n}\n\n_s(SixteenDays, \"WvRlJmIFCqFy3bDx2qS2vavYnKA=\");\n\n_c4 = SixteenDays;\n\nconst Search = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      props.setCity(props.cityName);\n      props.setStateCode(props.stateCode);\n      props.setCountryCode(props.countryCode);\n      props.setCount(props.cnt);\n      props.getGeoCodeRequest(props.cityName, props.stateCode, props.countryCode);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: props.cityName,\n        onChange: e => props.setCity(e.target.value),\n        placeholder: \"Enter City Name Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: props.stateCode,\n        onChange: e => props.setStateCode(e.target.value),\n        placeholder: \"Enter State Code Here<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: props.countryCode,\n        onChange: e => props.setCountryCode(e.target.value),\n        placeholder: \"Enter Country Code Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: props.cnt,\n        onChange: e => props.setCount(e.target.value),\n        placeholder: \"Enter Number of Days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"Submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = Search;\n\nconst Display = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.data.map((index, variable) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Day \", variable + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time: \", Date(index.dt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"High: \", index.temp.max, \" Celcius\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Low: \", index.temp.min, \" Celcius\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Possibility of Precipitation: \", index.pop * 100, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          icon: index.weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", index.weather.map((number, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: number.description\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 48\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this)]\n    }, variable, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n\n_c6 = Display;\n\nconst Image = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.icon.map((variable, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://openweathermap.org/img/wn/${variable.icon}@2x.png`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n\n_c7 = Image;\n\nfunction History() {}\n\n_c8 = History;\n\nfunction Credits() {}\n\n_c9 = Credits;\n\nfunction Error() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"This data entry does not exist, please hit back\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n\n_c10 = Error;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Home\");\n$RefreshReg$(_c3, \"Menu\");\n$RefreshReg$(_c4, \"SixteenDays\");\n$RefreshReg$(_c5, \"Search\");\n$RefreshReg$(_c6, \"Display\");\n$RefreshReg$(_c7, \"Image\");\n$RefreshReg$(_c8, \"History\");\n$RefreshReg$(_c9, \"Credits\");\n$RefreshReg$(_c10, \"Error\");","map":{"version":3,"sources":["/Users/justintan/Documents/GitHub/assignment-3-tan-justin/src/App.js"],"names":["React","useState","useEffect","Routes","Route","Link","useParams","Outlet","NavLink","useSearchParams","css","jsx","App","Home","Menu","SixteenDays","weather","setWeather","Latitude","setLatitude","Longtitude","setLongtitude","cnt","setCount","cityName","setCity","stateCode","setStateCode","countryCode","setCountryCode","number","getDataRequest","url","response","fetch","responseJSON","json","list","getGeoCodeRequest","geocode","responseGeo","responseJsonGeo","console","log","lon","lat","Search","props","e","preventDefault","target","value","Display","data","map","index","variable","Date","dt","temp","max","min","pop","key","description","Image","icon","History","Credits","Error"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Routes, Route, Link, useParams, Outlet, NavLink, useSearchParams} from 'react-router-dom';\nimport { css, jsx } from '@emotion/react';\n\nfunction App() {\n\n  return (\n    <div>\n      <h1>Lé Weather Watcher~</h1>\n      <Menu/>\n      <Routes>\n        <Route path=\"/\" element={<Home/>}/>\n        <Route path=\"/16Day\" element={<SixteenDays/>}/>\n        <Route path =\"/Credits\"/>\n        <Route path=\"*\" element={<Error/>}/>\n      </Routes>\n    </div>\n  );\n}\n\nfunction Home(){\n  return(\n    <div>\n      <h2>\n        Welcome to Lé Weather Watcher. Please select from the above menu options!\n      </h2>\n    </div>\n  );\n\n}\n\nfunction Menu(){\n\n    return (\n      <nav>\n        <NavLink to='/'>Home</NavLink>\n        <NavLink to='/16Day'>16 Days Forecast</NavLink>\n        <NavLink to='/Credits'>Credits</NavLink>\n      </nav>\n    );\n}\n\nfunction SixteenDays(){\n  \n  const [weather, setWeather] = useState([]);\n  const [Latitude, setLatitude] = useState('');\n  const [Longtitude, setLongtitude] = useState('');\n  const [cnt, setCount] = useState('');\n  const [cityName, setCity] = useState('');\n  const [stateCode, setStateCode] = useState('');\n  const [countryCode, setCountryCode] = useState('');\n  var number = 1.7;\n\n  const getDataRequest = async(Latitude, Longtitude, cnt)=>{\n    const url = `https://api.openweathermap.org/data/2.5/forecast/daily?lat=${Latitude}&lon=${Longtitude}&cnt=${cnt}&units=metric&appid=da655239f538023532cc87591851330d`\n    const response = await fetch(url)\n    const responseJSON = await response.json()\n    if(responseJSON.list){ \n      setWeather(responseJSON.list)\n    }\n  }\n  useEffect(()=>{\n    getDataRequest(Latitude, Longtitude);\n  }, [Latitude, Longtitude])\n\n  const getGeoCodeRequest = async(cityName, stateCode, countryCode)=>{\n    const geocode = `http://api.openweathermap.org/geo/1.0/direct?q=${cityName},${stateCode},${countryCode}&limit=5&appid=da655239f538023532cc87591851330d`\n    const responseGeo = await fetch(geocode)\n    const responseJsonGeo = await responseGeo.json()\n    console.log(responseJsonGeo)\n    var lon = responseJsonGeo.lon\n    var lat = responseJsonGeo.lat\n    console.log(responseJsonGeo.lon)\n    if(responseJsonGeo.lat){\n      setLatitude(lon)\n    }\n    if(responseJsonGeo.lon){\n      setLongtitude(lat)\n    }\n  }\n  useEffect(()=>{\n    getGeoCodeRequest(cityName, stateCode, countryCode);\n  }, [cityName, stateCode, countryCode])\n  \n  \n\n  return(\n   <div>\n      <Search cityName={cityName} setCity={setCity} stateCode={stateCode} setStateCode={setStateCode} countryCode={countryCode} \n        setCountryCode={setCountryCode} cnt={cnt} setCount={setCount} getGeoCodeRequest={getGeoCodeRequest} getDataRequest={getDataRequest}\n        Latitude={Latitude} setLatitude={setLatitude} Longtitude={Longtitude} setLongtitude={setLongtitude}/>\n      <Display data = {weather}/>\n    </div>\n    \n\n  )\n  \n}\n\nconst Search=(props)=>{\n  return(\n    <form \n        onSubmit={(e)=>{e.preventDefault();\n        props.setCity(props.cityName)\n        props.setStateCode(props.stateCode)\n        props.setCountryCode(props.countryCode)\n        props.setCount(props.cnt)\n        props.getGeoCodeRequest(props.cityName, props.stateCode, props.countryCode)\n        \n      }}>\n      <fieldset>\n        <input value = {props.cityName} onChange={(e)=>props.setCity(e.target.value)} placeholder='Enter City Name Here'></input>\n        <input value = {props.stateCode} onChange={(e)=>props.setStateCode(e.target.value)} placeholder='Enter State Code Here<'></input>\n        <input value = {props.countryCode} onChange={(e)=>props.setCountryCode(e.target.value)} placeholder='Enter Country Code Here'></input>\n        <input value = {props.cnt} onChange={(e)=>props.setCount(e.target.value)} placeholder='Enter Number of Days'></input>\n        <button type = \"Submit\">Search</button>\n      </fieldset>\n      </form>\n  )\n\n}\n\nconst Display = (props) =>{\n\n\n  return(\n    <div>\n      {props.data.map((index, variable)=>  \n          <div key = {variable}>\n            <h1>Day {variable+1}</h1>\n            <p>Time: {Date(index.dt)}</p>\n            <p>High: {index.temp.max} Celcius</p>\n            <p>Low: {index.temp.min} Celcius</p>\n            <p>Possibility of Precipitation: {index.pop * 100}%</p>\n            <div>\n              <Image  icon= {index.weather}/>\n            </div>\n            <p>Description: {\n              index.weather.map((number, key)=><div key={key}>{number.description}</div>)\n            }</p>\n          </div>\n      )}\n    </div>\n  )\n}\n\nconst Image = (props)=>{\n  console.log(props)\n  return(\n    <div>\n      {props.icon.map((variable, index)=>\n        <img key ={index} src = {`http://openweathermap.org/img/wn/${variable.icon}@2x.png`}></img>\n      )}\n      \n    </div>\n  )\n\n}\n\nfunction History(){\n\n\n\n}\n\nfunction Credits(){}\n\nfunction Error(){\n  return(\n    <div>\n      This data entry does not exist, please hit back\n    </div>\n  )\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}