{"ast":null,"code":"var _jsxFileName = \"/Users/justintan/Documents/GitHub/assignment-3-tan-justin/src/App.js\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route, NavLink } from 'react-router-dom';\nimport { css, jsx } from '@emotion/react';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nfunction App() {\n  const headerStyle = css`\n    background-color: deepskyblue;\n    color: ghostwhite;\n    justify-content: center;\n    padding: 10px;\n    border: 15px groove lightskyblue;\n    display: flex;\n\n  `;\n  const divStyle = css`\n    background-image:linear-gradient(snow, lightskyblue 30%, skyblue 20%,deepskyblue);\n    background-size: cover;\n    height: 98vh;\n    width: 98vw;\n  `;\n  return _jsxDEV(\"div\", {\n    css: divStyle,\n    children: [_jsxDEV(\"h1\", {\n      css: headerStyle,\n      children: \"L\\xE9 Weather Watcher~\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), _jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), _jsxDEV(Routes, {\n      children: [_jsxDEV(Route, {\n        path: \"/\",\n        element: _jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), _jsxDEV(Route, {\n        path: \"/16Day\",\n        element: _jsxDEV(SixteenDays, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), _jsxDEV(Route, {\n        path: \"/Credits\",\n        element: _jsxDEV(Credits, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), _jsxDEV(Route, {\n        path: \"*\",\n        element: _jsxDEV(Error, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction Home() {\n  const textStyle = css`\n    text-align: center;\n    color: royalblue;\n    padding-top: 10%\n  \n  `;\n  return _jsxDEV(\"div\", {\n    children: _jsxDEV(\"h2\", {\n      css: textStyle,\n      children: \"Welcome to L\\xE9 Weather Watcher. Please select from the above menu options!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Home;\n\nfunction Menu() {\n  const menuStyle = css`\n    background-color: skyblue;\n    color: snow;\n    display: flex;\n    justify-content: space-evenly;\n    padding: 20px;\n    border: 20px groove snow;\n    `;\n  const linkStyle = css`\n    color: snow;\n    text-decoration: none;\n    font-size: 20px;\n    font-style: bold;\n  `;\n  return _jsxDEV(\"nav\", {\n    css: menuStyle,\n    children: [_jsxDEV(NavLink, {\n      css: linkStyle,\n      to: \"/\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), _jsxDEV(NavLink, {\n      css: linkStyle,\n      to: \"/16Day\",\n      children: \"16 Days Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), _jsxDEV(NavLink, {\n      css: linkStyle,\n      to: \"/Credits\",\n      children: \"Credits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n}\n\n_c3 = Menu;\n\nfunction SixteenDays() {\n  _s();\n\n  const [weather, setWeather] = useState([]);\n  const [cnt, setCount] = useState('');\n  const [cityName, setCity] = useState('');\n  const [stateCode, setStateCode] = useState('');\n  const [countryCode, setCountryCode] = useState('');\n  const [state, setState] = useState(false);\n\n  const getDataRequest = async (cityName, stateCode, countryCode, cnt) => {\n    const url = `https://api.openweathermap.org/data/2.5/forecast/daily?q=${cityName},${stateCode},${countryCode}&cnt=${cnt}&units=metric&appid=da655239f538023532cc87591851330d`;\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n\n    if (responseJSON.list) {\n      setWeather(responseJSON.list);\n    }\n  };\n\n  useEffect(() => {\n    getDataRequest(cityName, stateCode, countryCode, cnt);\n  }, [cityName, stateCode, countryCode, cnt]);\n  return _jsxDEV(\"div\", {\n    children: [_jsxDEV(Search, {\n      cityName: cityName,\n      setCity: setCity,\n      stateCode: stateCode,\n      setStateCode: setStateCode,\n      countryCode: countryCode,\n      setCountryCode: setCountryCode,\n      cnt: cnt,\n      setCount: setCount,\n      getDataRequest: getDataRequest,\n      setState: setState,\n      state: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), _jsxDEV(\"div\", {\n      children: state ? _jsxDEV(Display, {\n        data: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 18\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 4\n  }, this);\n}\n\n_s(SixteenDays, \"k5iUWoklzodet8ATLVPrZ+oSmZc=\");\n\n_c4 = SixteenDays;\n\nconst Search = props => {\n  const formStyle = css`\n    background-color: snow;\n    display: flex;\n    justify-content: center; \n  `;\n  return _jsxDEV(\"form\", {\n    css: formStyle,\n    onSubmit: e => {\n      e.preventDefault();\n      props.setCity(props.cityName);\n      props.setStateCode(props.stateCode);\n      props.setCountryCode(props.countryCode);\n      props.setCount(props.cnt);\n      props.getDataRequest(props.cityName, props.stateCode, props.countryCode, props.cnt);\n      props.setState(true);\n    },\n    children: _jsxDEV(\"fieldset\", {\n      children: [_jsxDEV(\"input\", {\n        value: props.cityName,\n        onChange: e => props.setCity(e.target.value),\n        placeholder: \"Enter City Name Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), _jsxDEV(\"input\", {\n        value: props.stateCode,\n        onChange: e => props.setStateCode(e.target.value),\n        placeholder: \"Enter State Code Here<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), _jsxDEV(\"input\", {\n        value: props.countryCode,\n        onChange: e => props.setCountryCode(e.target.value),\n        placeholder: \"Enter Country Code Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), _jsxDEV(\"input\", {\n        value: props.cnt,\n        onChange: e => props.setCount(e.target.value),\n        placeholder: \"Enter No. of Days (1-16)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), _jsxDEV(\"button\", {\n        type: \"Submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = Search;\n\nconst Display = props => {\n  return _jsxDEV(\"div\", {\n    children: props.data.map((index, variable) => _jsxDEV(\"div\", {\n      children: [_jsxDEV(\"h1\", {\n        children: [\"Day \", variable + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), _jsxDEV(\"p\", {\n        children: [\"Time: \", Date(index.dt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), _jsxDEV(\"p\", {\n        children: [\"High: \", index.temp.max, \" Celcius\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this), _jsxDEV(\"p\", {\n        children: [\"Low: \", index.temp.min, \" Celcius\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), _jsxDEV(\"p\", {\n        children: [\"Possibility of Precipitation: \", index.pop * 100, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), _jsxDEV(\"div\", {\n        children: _jsxDEV(Image, {\n          icon: index.weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), _jsxDEV(\"p\", {\n        children: [\"Description: \", index.weather.map((number, key) => _jsxDEV(\"div\", {\n          children: number.description\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 48\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this)]\n    }, variable, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n\n_c6 = Display;\n\nconst Image = props => {\n  return _jsxDEV(\"div\", {\n    children: props.icon.map((variable, index) => _jsxDEV(\"img\", {\n      src: `http://openweathermap.org/img/wn/${variable.icon}@2x.png`,\n      alt: \"weather\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n\n_c7 = Image;\n\nfunction History() {}\n\n_c8 = History;\n\nfunction Credits() {\n  return _jsxDEV(\"div\", {\n    children: [_jsxDEV(\"p\", {\n      children: \"This website uses the OpenWeather API. For more information, visit their website at: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), _jsxDEV(\"a\", {\n      href: \"https://openweathermap.org\",\n      children: \"https://openweathermap.org\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n\n_c9 = Credits;\n\nfunction Error() {\n  return _jsxDEV(\"div\", {\n    children: \"This data entry does not exist, please hit back\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n\n_c10 = Error;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Home\");\n$RefreshReg$(_c3, \"Menu\");\n$RefreshReg$(_c4, \"SixteenDays\");\n$RefreshReg$(_c5, \"Search\");\n$RefreshReg$(_c6, \"Display\");\n$RefreshReg$(_c7, \"Image\");\n$RefreshReg$(_c8, \"History\");\n$RefreshReg$(_c9, \"Credits\");\n$RefreshReg$(_c10, \"Error\");","map":{"version":3,"sources":["/Users/justintan/Documents/GitHub/assignment-3-tan-justin/src/App.js"],"names":["React","useState","useEffect","Routes","Route","NavLink","css","jsx","App","headerStyle","divStyle","Home","textStyle","Menu","menuStyle","linkStyle","SixteenDays","weather","setWeather","cnt","setCount","cityName","setCity","stateCode","setStateCode","countryCode","setCountryCode","state","setState","getDataRequest","url","response","fetch","responseJSON","json","list","Search","props","formStyle","e","preventDefault","target","value","Display","data","map","index","variable","Date","dt","temp","max","min","pop","number","key","description","Image","icon","History","Credits","Error"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\n\nimport React, {useState, useEffect} from 'react';\nimport {Routes, Route, NavLink} from 'react-router-dom';\nimport { css, jsx } from '@emotion/react';\n\n\n\nfunction App() {\n\n  const headerStyle = css`\n    background-color: deepskyblue;\n    color: ghostwhite;\n    justify-content: center;\n    padding: 10px;\n    border: 15px groove lightskyblue;\n    display: flex;\n\n  `\n  const divStyle =css`\n    background-image:linear-gradient(snow, lightskyblue 30%, skyblue 20%,deepskyblue);\n    background-size: cover;\n    height: 98vh;\n    width: 98vw;\n  `\n\n  return (\n    <div css={divStyle}>\n      <h1 css={headerStyle}>Lé Weather Watcher~</h1>\n      <Menu/>\n      <Routes>\n        <Route path=\"/\" element={<Home/>}/>\n        <Route path=\"/16Day\" element={<SixteenDays/>}/>\n        <Route path =\"/Credits\" element={<Credits/>}/>\n        <Route path=\"*\" element={<Error/>}/>\n      </Routes>\n    </div>\n  );\n}\n\nfunction Home(){\n\n  const textStyle=css`\n    text-align: center;\n    color: royalblue;\n    padding-top: 10%\n  \n  `\n  return(\n    <div>\n      <h2 css={textStyle}>\n        Welcome to Lé Weather Watcher. Please select from the above menu options!\n      </h2>\n    </div>\n  );\n\n}\n\nfunction Menu(){\n\n  const menuStyle =css`\n    background-color: skyblue;\n    color: snow;\n    display: flex;\n    justify-content: space-evenly;\n    padding: 20px;\n    border: 20px groove snow;\n    `\n  const linkStyle = css`\n    color: snow;\n    text-decoration: none;\n    font-size: 20px;\n    font-style: bold;\n  `\n    return (\n      <nav css={menuStyle}>\n        <NavLink css={linkStyle} to='/'>Home</NavLink>\n        <NavLink css={linkStyle} to='/16Day'>16 Days Forecast</NavLink>\n        <NavLink css={linkStyle} to='/Credits'>Credits</NavLink>\n      </nav>\n    );\n}\n\nfunction SixteenDays(){\n  \n  const [weather, setWeather] = useState([]);\n  const [cnt, setCount] = useState('');\n  const [cityName, setCity] = useState('');\n  const [stateCode, setStateCode] = useState('');\n  const [countryCode, setCountryCode] = useState('');\n  const [state, setState] = useState(false)\n\n  const getDataRequest = async(cityName, stateCode, countryCode, cnt)=>{\n    const url = `https://api.openweathermap.org/data/2.5/forecast/daily?q=${cityName},${stateCode},${countryCode}&cnt=${cnt}&units=metric&appid=da655239f538023532cc87591851330d`\n    const response = await fetch(url)\n    const responseJSON = await response.json()\n    if(responseJSON.list){ \n      setWeather(responseJSON.list)\n    }\n  }\n  useEffect(()=>{\n    getDataRequest(cityName,stateCode,countryCode, cnt);\n  }, [cityName, stateCode, countryCode, cnt])\n\n  return(\n   <div>\n      <Search cityName={cityName} setCity={setCity} stateCode={stateCode} setStateCode={setStateCode} countryCode={countryCode} \n        setCountryCode={setCountryCode} cnt={cnt} setCount={setCount} getDataRequest={getDataRequest} setState={setState} state={state}/>\n      <div>\n        {state ? <Display data = {weather}/> : null }\n      </div>\n    </div>\n    \n\n  )\n  \n}\n\nconst Search=(props)=>{\n\n  const formStyle = css`\n    background-color: snow;\n    display: flex;\n    justify-content: center; \n  `\n  return(\n    <form css={formStyle}\n        onSubmit={(e)=>{e.preventDefault();\n        props.setCity(props.cityName)\n        props.setStateCode(props.stateCode)\n        props.setCountryCode(props.countryCode)\n        props.setCount(props.cnt)\n        props.getDataRequest(props.cityName, props.stateCode, props.countryCode, props.cnt)\n        props.setState(true)\n      }}>\n      <fieldset>\n        <input value = {props.cityName} onChange={(e)=>props.setCity(e.target.value)} placeholder='Enter City Name Here'></input>\n        <input value = {props.stateCode} onChange={(e)=>props.setStateCode(e.target.value)} placeholder='Enter State Code Here<'></input>\n        <input value = {props.countryCode} onChange={(e)=>props.setCountryCode(e.target.value)} placeholder='Enter Country Code Here'></input>\n        <input value = {props.cnt} onChange={(e)=>props.setCount(e.target.value)} placeholder='Enter No. of Days (1-16)'></input>\n        <button type = \"Submit\">Search</button>\n      </fieldset>\n      </form>\n  )\n\n}\n\nconst Display = (props) =>{\n\n\n  return(\n    <div>\n      {props.data.map((index, variable)=>  \n          <div key = {variable}>\n            <h1>Day {variable+1}</h1>\n            <p>Time: {Date(index.dt)}</p>\n            <p>High: {index.temp.max} Celcius</p>\n            <p>Low: {index.temp.min} Celcius</p>\n            <p>Possibility of Precipitation: {index.pop * 100}%</p>\n            <div>\n              <Image  icon= {index.weather}/>\n            </div>\n            <p>Description: {\n              index.weather.map((number, key)=><div key={key}>{number.description}</div>)\n            }</p>\n          </div>\n      )}\n    </div>\n  )\n}\n\nconst Image = (props)=>{\n  return(\n    <div>\n      {props.icon.map((variable, index)=>\n        <img key ={index} src = {`http://openweathermap.org/img/wn/${variable.icon}@2x.png`} alt =\"weather\"></img>\n      )}\n      \n    </div>\n  )\n\n}\n\nfunction History(){\n\n\n\n}\n\nfunction Credits(){\n  return(\n    <div>\n      <p>This website uses the OpenWeather API. For more information, visit their website at: </p>\n      <a href=\"https://openweathermap.org\">https://openweathermap.org</a>\n    </div>\n  )\n}\n  \nfunction Error(){\n  return(\n    <div>\n      This data entry does not exist, please hit back\n    </div>\n  )\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}